### HIBERNATE COLLECTION MAPPING WITH THE HELP OF ANNOTATIONS #####

STEP 1: first write the POJO class, with the help of Annotations.
name:- Student3.java

package com.jtc;

import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;

import java.util.*;
import org.hibernate.annotations.*;


@Entity
@Table(name="mystudents")
public class Student3 {
	
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="sid")
	private int sid;
	
	@Column(name="sname")
	private String sname;
	@Column(name="dob")
	//@Transient
	private String dob;
	@Column(name="quali")
	private String qualification;
	@ElementCollection
	@JoinTable(name="courses",joinColumns=@JoinColumn(name="sid"))
	@IndexColumn(name="idx")
	@Column(name="cname")
	private String courses[];
	
	@ElementCollection
	@JoinTable(name="emails",joinColumns=@JoinColumn(name="sid"))
	@IndexColumn(name="idx")
	private List<String> emails;
	
	@ElementCollection
	@JoinTable(name="marks", joinColumns=@JoinColumn(name="sid"))
	@IndexColumn(name="idx")
	private List<Integer> marks;
	
	@ElementCollection
	@JoinTable(name="phones", joinColumns=@JoinColumn(name="sid"))
	@IndexColumn(name="idx")
	@Column(name="phones")
	private Set<Long> phones;
	
	@ElementCollection
	@JoinTable(name="refs", joinColumns=@JoinColumn(name="sid"))
	@IndexColumn(name="idx")
	@Column(name="refs")
	private Map<String,Long> refs;
	
	public Student3() {
		
	}
	public Student3(int sid, String sname, String dob, String qualification, String courses[], List<String> emails, List<Integer> marks, Set<Long> phones, Map<String,Long>refs) {
	
		super();
	this.sid = sid;
	this.sname=sname;
	this.dob=dob;
	this.qualification=qualification;
	this.courses=courses;
	this.emails=emails;
	this.marks=marks;
	this.phones=phones;
	this.refs=refs;
	
}
	public int getSid() {
		return sid;
	}
	public void setSid(int sid) {
		this.sid = sid;
	}
	public String getSname() {
		return sname;
	}
	public void setSname(String sname) {
		this.sname = sname;
	}
	public String getDob() {
		return dob;
	}
	public void setDob(String dob) {
		this.dob = dob;
	}
	public String getQualification() {
		return qualification;
	}
	public void setQualification(String qualification) {
		this.qualification = qualification;
	}
	public String[] getCourses() {
		return courses;
	}
	public void setCourses(String[] courses) {
		this.courses = courses;
	}
	public List<String> getEmails() {
		return emails;
	}
	public void setEmails(List<String> emails) {
		this.emails = emails;
	}
	public List<Integer> getMarks() {
		return marks;
	}
	public void setMarks(List<Integer> marks) {
		this.marks = marks;
	}
	public Set<Long> getPhones() {
		return phones;
	}
	public void setPhones(Set<Long> phones) {
		this.phones = phones;
	}
	public Map<String, Long> getRefs() {
		return refs;
	}
	public void setRefs(Map<String, Long> refs) {
		this.refs = refs;
	}
}

STEP 2:- Now write the Configuration file.

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
	
	<hibernate-configuration>
	<session-factory>
	
	<property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
	<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/newdb</property>
	<property name="hibernate.connection.username">root</property>
	<property name="hibernate.connection.password">sonijyoti</property>
	<property name="hibernate.connection.size_pool">99</property>
 	<property name="dialect">org.hibernate.dialect.MySQL8Dialect</property> 
	<property name="hibernate.show_sql">true</property>
	<property name="hibernate.format_sql"></property>
	<property name="hbm2ddl.auto">create</property>
	
	
	<mapping class="com.jtc.Student3"></mapping>
	
	
	</session-factory>
	</hibernate-configuration>
  
  STEP 3:- now write the Utility file.
  
 name- AhibernateUtil.java
 
 package com.jtc;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class AhibernateUtil {
	
		static SessionFactory sessionfactory=null;
		static {
			Configuration acfg=new Configuration();
			//acfg=(Configuration)acfg.configure("Hibernate.cfg.xml");
			acfg=acfg.configure("Hibernate.cfg.xml");
			sessionfactory=acfg.buildSessionFactory();
			}
		public static SessionFactory sessionfactory() {
			return sessionfactory;
		}
		
	}

STEP 4:- Now write the Client file, means what operation you wanted to perform.
Here I want to put some data inside our database.
Name:- Jtc4A.java

package com.jtc;

import org.hibernate.*;
import org.hibernate.SessionFactory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.persistence.*;

public class Jtc4A {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Transaction tx=null;
		try {
			SessionFactory sf=AhibernateUtil.sessionfactory();
			Session session=sf.openSession();
			tx=session.beginTransaction();
			String cous[]= {"java","JDBC","JSP"};
			List<String> ems=new ArrayList<String>();
			ems.add("aa@jtc");
			ems.add("bb@jtc");
			ems.add("cc@jtc");
			List<Integer> maks=new ArrayList<Integer>();
			maks.add(100);
			maks.add(99);
			maks.add(100);
			Set<Long> phs = new HashSet<Long>();
			phs.add(1111L);
			phs.add(2222L);
			phs.add(3333L);

			Map<String, Long> refs = new HashMap<String, Long>();
			refs.put("aaa", (1111L));
			refs.put("bbb", (2222L));
			refs.put("ccc", (3333L));

			Student3 stu = new Student3(102, "jyoti", "09-05-99", "B.Tech", cous, ems, maks, phs, refs);
			session.save(stu);
			tx.commit();
			session.close();
		  
		} catch (Exception e) {
			e.printStackTrace();

			}
			
	}

}

STEP 5:- Now i am writing the program for fetching that perticular information which i feede in above code.
name:- Jtc4B.java

package com.jtc;

import org.hibernate.*;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import java.util.*;
import javax.persistence.*;

public class Jtc4B {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	try {
		SessionFactory sf=AhibernateUtil.sessionfactory();
		Session session=sf.openSession();
		Transaction tx=session.beginTransaction();
		Student3 stu=(Student3)session.load(Student3.class,1);//serializable ID
		//Student3 stu1=(Student3)session.load(Student3.class,2);
		System.out.println(stu.getSid()+"\t"+stu.getSname()+"\t"+stu.getDob()+"\t"+stu.getQualification()+"\t"+stu.getCourses()+"\t"+stu.getEmails());
		//System.out.println(stu1.getSid()+"\t"+stu1.getSname()+"\t"+stu1.getDob()+"\t"+stu1.getQualification()+"\t"+stu1.getCourses()+"\t"+stu1.getEmails());
		{ System.out.println(stu); }
		System.out.println(stu.getSid()+"\t"+stu.getSname()+"\t"+stu.getDob());
					
		{ System.out.println(stu); }
					 
		System.out.println(stu.getEmails());
		System.out.println(stu.getMarks());
		System.out.println(stu.getPhones());
		System.out.println(stu.getRefs());
		tx.commit();
		session.close();
		}
		catch(Exception e) {
		e.printStackTrace();
					
		}
	}

}

final step:- Now you are redy enough to run the program as per your need.
